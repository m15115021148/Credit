package com.sitemap.weifang.adapter;

import android.annotation.TargetApi;
import android.content.Context;
import android.os.Build;
import android.os.Handler;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.sitemap.weifang.R;
import com.sitemap.weifang.http.HttpImageUtil;
import com.sitemap.weifang.model.NewCardModel;

import java.util.List;

/**
 * @desc 新名片 适配器
 * Created by chenmeng on 2016/12/14.
 */
public class NewCardListAdapter extends BaseAdapter {
    private Context mContext;
    private List<NewCardModel> mList;
    private Holder holder;

    private OnNewCardAddCallBack callBack;

    public interface OnNewCardAddCallBack{
        void onIgnore(int pos);
        void onAdd(int pos);
        void onEntry(int pos);
    }

    public NewCardListAdapter(Context context,List<NewCardModel> list,OnNewCardAddCallBack callBack){
        this.mContext = context;
        this.mList = list;
        this.callBack = callBack;
    }

    @Override
    public int getCount() {
        return mList.size();
    }

    @Override
    public Object getItem(int position) {
        return mList.get(position);
    }

    @Override
    public long getItemId(int position) {
        return position;
    }

    @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        if (convertView == null){
            convertView = LayoutInflater.from(mContext).inflate(R.layout.new_card_list_view_item,null);
            holder = new Holder();
            holder.img = (ImageView) convertView.findViewById(R.id.img);
            holder.name = (TextView) convertView.findViewById(R.id.name);
            holder.tel = (TextView) convertView.findViewById(R.id.tel);
            holder.ignore = (TextView) convertView.findViewById(R.id.ignore);
            holder.add = (TextView) convertView.findViewById(R.id.add);
            holder.entry = (RelativeLayout) convertView.findViewById(R.id.entry);
            holder.isShow = (LinearLayout) convertView.findViewById(R.id.isShow);
            convertView.setTag(holder);
        }else{
            holder = (Holder) convertView.getTag();
        }
        HttpImageUtil.loadRoundImage(holder.img,"");
        final NewCardModel model = mList.get(position);
        holder.name.setText(model.getXm());
        holder.tel.setText(model.getCode());

        if (model.getResult().equals("0")){//0:未添加
            holder.ignore.setVisibility(View.VISIBLE);
            holder.add.setVisibility(View.VISIBLE);
            holder.isShow.setVisibility(View.VISIBLE);
            holder.ignore.setBackground(mContext.getResources().getDrawable(R.drawable.new_card_bt_bg));
            holder.add.setBackground(mContext.getResources().getDrawable(R.drawable.new_card_bt_bg1));
            holder.ignore.setText("忽略");
            holder.add.setText("添加");
            holder.ignore.setTextColor(mContext.getResources().getColor(R.color.black_dan));
            holder.add.setTextColor(mContext.getResources().getColor(R.color.white));
        }else if(model.getResult().equals("1")){//1：已添加，
            holder.isShow.setVisibility(View.VISIBLE);
            holder.ignore.setVisibility(View.GONE);
            holder.add.setVisibility(View.VISIBLE);
            holder.ignore.setBackground(mContext.getResources().getDrawable(R.drawable.new_card_bt_bg));
            holder.add.setBackground(mContext.getResources().getDrawable(R.drawable.new_card_bt_bg));
            holder.ignore.setText("已添加");
            holder.add.setText("已添加");
            holder.ignore.setTextColor(mContext.getResources().getColor(R.color.black_dan));
            holder.add.setTextColor(mContext.getResources().getColor(R.color.black_dan));
        }else if (model.getResult().equals("2")){//2：已忽略
            holder.isShow.setVisibility(View.VISIBLE);
            holder.ignore.setVisibility(View.GONE);
            holder.add.setVisibility(View.VISIBLE);
            holder.ignore.setBackground(mContext.getResources().getDrawable(R.drawable.new_card_bt_bg));
            holder.add.setBackground(mContext.getResources().getDrawable(R.drawable.new_card_bt_bg));
            holder.ignore.setText("已忽略");
            holder.add.setText("已忽略");
            holder.ignore.setTextColor(mContext.getResources().getColor(R.color.black_dan));
            holder.add.setTextColor(mContext.getResources().getColor(R.color.black_dan));
        } else{//错误处理 不显示
            holder.isShow.setVisibility(View.GONE);
        }

        final int pos = position;
        holder.ignore.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (model.getResult().equals("0")){
                    if (callBack!=null){
                        callBack.onIgnore(pos);
                    }
                }
            }
        });
        holder.add.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (model.getResult().equals("0")){
                    if (callBack!=null){
                        callBack.onAdd(pos);
                    }
                }
            }
        });
        holder.entry.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (callBack!=null){
                    callBack.onEntry(pos);
                }
            }
        });

        return convertView;
    }

    private class Holder{
        ImageView img;
        TextView name,tel,ignore,add;
        RelativeLayout entry;//进入
        LinearLayout isShow;//是否显示
    }
}
